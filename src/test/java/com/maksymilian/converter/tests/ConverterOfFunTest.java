package com.maksymilian.converter.tests;

import com.maksymilian.converter.ConverterOfFun;
import org.junit.Ignore;
import org.junit.Test;

import static org.junit.Assert.*;

public class ConverterOfFunTest {

    @Test
    public void toBinary() throws Exception {
        ConverterOfFun converterOfFun = new ConverterOfFun();
        assertEquals("1001111001010001011", converterOfFun.toBinary(324235));
        assertEquals("110010100000", converterOfFun.toBinary(3232));
        assertEquals("0", converterOfFun.toBinary(0));
        assertEquals("1", converterOfFun.toBinary(1));
    }

    @Test()
    public void textToBinary() throws Exception{
       ConverterOfFun converterOfFun = new ConverterOfFun();
       assertEquals("01000011 01101111 01101110 01110100 01101001 01101110 01110101 01100001 01101100 00100000" +
               " 01100100 01100101 01101100 01101001 01100111 01101000 01110100 01100101 01100100 00100000 01100001 " +
               "01110011 00100000 01100101 01101100 01110011 01100101 01110111 01101000 01100101 01110010 01100101" +
               " 00100000 01100001 01101101 00100000 01100011 01101111 01101110 01110110 01101001 01101110 01100011" +
               " 01100101 01100100 00100000 01110101 01101110 01100110 01100101 01100101 01101100 01101001 01101110" +
               " 01100111 00101110", converterOfFun.toBinary("Continual delighted as elsewhere am convinced unfeeling."));
       assertEquals("01000011 01101111 01101110 01110100 01101001 01101110 01110101 01100001 01101100 00100000 " +
               "01100100 01100101 01101100 01101001 01100111 01101000 01110100 01100101 01100100 00100000 01100001 " +
               "01110011 00100000 01100101 01101100 01110011 01100101 01110111 01101000 01100101 01110010 01100101 " +
               "00100000 01100001 01101101 00100000 01100011 01101111 01101110 01110110 01101001 01101110 01100011 " +
               "01100101 01100100 00100000 01110101 01101110 01100110 01100101 01100101 01101100 01101001 01101110 " +
               "01100111 00101110 00100000 01000001 01101110 01100100 00100000 01110100 01101000 01100101 00100000 " +
               "01100111 01101111 01100100 00100000 01110011 01100001 01101001 01100100 00101100 00100000 01101100 " +
               "01100101 01110100 00100000 01101001 01110100 00100000 01100010 01100101 00101110 00100000 01000001 " +
               "01101110 01100100 00100000 01110011 01101111 00100000 01101001 01110100 00100000 01101000 01100001 " +
               "01110000 01110000 01100101 01101110 01100101 01100100",
               converterOfFun.toBinary("Continual delighted as elsewhere am convinced unfeeling. And the god said, let it be. And so it happened"));
    }

}